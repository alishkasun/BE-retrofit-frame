{
  "swagger": "2.0",
  "info": {
    "description": "Api Documentation",
    "version": "1.0",
    "title": "Api Documentation",
    "termsOfService": "urn:tos",
    "contact": {},
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    }
  },
  "host": "80.78.248.82:8189",
  "basePath": "/market",
  "tags": [
    {
      "name": "category-controller",
      "description": "Category Controller"
    },
    {
      "name": "product-controller",
      "description": "Product Controller"
    }
  ],
  "paths": {
    "/api/v1/categories/{id}": {
      "get": {
        "tags": [
          "category-controller"
        ],
        "summary": "getCategoryById",
        "operationId": "getCategoryByIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CategoryDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/products": {
      "get": {
        "tags": [
          "product-controller"
        ],
        "summary": "Returns products",
        "operationId": "getProductsUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "product-controller"
        ],
        "summary": "Creates a new product. If id != null, then throw bad request response",
        "operationId": "createNewProductUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "p",
            "description": "p",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "product-controller"
        ],
        "summary": "Modify product",
        "operationId": "modifyProductUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "p",
            "description": "p",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/products/{id}": {
      "get": {
        "tags": [
          "product-controller"
        ],
        "summary": "Returns a specific product by their identifier. 404 if does not exist.",
        "operationId": "getProductByIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the book to be obtained. Cannot be empty.",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProductDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "product-controller"
        ],
        "summary": "Delete product",
        "operationId": "deleteByIdUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the product",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    }
  },
  "definitions": {
    "CategoryDto": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductDto"
          }
        },
        "title": {
          "type": "string"
        }
      },
      "title": "CategoryDto"
    },
    "ProductDto": {
      "type": "object",
      "required": [
        "categoryTitle",
        "id",
        "price",
        "title"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 1,
          "description": "Unique identifier of the product. No two products can have the same id."
        },
        "title": {
          "type": "string",
          "example": "Bread",
          "description": "Title of the product."
        },
        "price": {
          "type": "integer",
          "format": "int32",
          "example": 100,
          "description": "Price of the product."
        },
        "categoryTitle": {
          "type": "string",
          "example": "Food",
          "description": "Category title of the product."
        }
      },
      "title": "ProductDto",
      "description": "Product dto in the application."
    }
  }
}